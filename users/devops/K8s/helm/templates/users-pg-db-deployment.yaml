apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.db.name }}-deployment
  labels:
    app: {{ .Values.db.name }}
spec:
  replicas: {{ .Values.db.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
      - name: {{ .Values.db.name }}
        image: {{ .Values.db.container.image }}
        ports:
          - containerPort: 5432
        env:
          - name: POSTGRES_DB
            value: "users"
          - name: POSTGRES_USER
            value: "microuser"
          - name: POSTGRES_PASSWORD
            value: "microuser"
          - name: PGDATA
            value: "/var/lib/postgresql/data/pgdata"

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db.service.name }}
spec:
  type: LoadBalancer      #This only to get access to service from outside by nodePort. In order to use pgAdmin to configure database
  selector:
    app: {{ .Values.db.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.db.service.port }}
      targetPort: 5432
      nodePort: 30543
